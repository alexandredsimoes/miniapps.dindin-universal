<Page
    x:Class="DinDinPro.Universal.Views.CriarLancamentoPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:DinDinPro.Universal.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    xmlns:uc="using:DinDinPro.Universal.UserControls"     
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:i="using:Microsoft.Xaml.Interactions.Core"      
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:converters="using:DinDinPro.Universal.Converters"
    DataContext="{Binding Source={StaticResource Locator}, Path=CriarLancamento}"                             
    x:Name="This"     
    xmlns:designViewModels="using:DinDinPro.Universal.DesignViewModels"
    d:DataContext="{d:DesignInstance designViewModels:CriarLancamentoPageDesignViewModel ,IsDesignTimeCreatable=True}">

    <Page.Resources>
        <!--Converters-->
        <converters:SelecaoConverter x:Key="SelecaoConverter" />
        <converters:SelecaoDataConverter x:Key="SelecaoDataConverter" />
        <converters:DateTimeParaDateTimeOffsetConverter x:Key="DateTimeParaDateTimeOffsetConverter" />
        <converters:TipoToBooleanConverter x:Key="TipoToBooleanConverter" />
        <converters:InverterBoolToVisibility x:Key="InverseBooleanToVisibilityConverter" />
        <converters:BoolToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:PeriodoToVisibilityConverter x:Key="PeriodoToVisibilityConverter" />
        <converters:RepeticaoApuracaoVisibility x:Key="RepeticaoApuracaoVisibility" />
        <converters:RepeticaoVisibilityConverter x:Key="RepeticaoVisibilityConverter" />
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:PeriodoToBooleanConverter x:Key="PeriodoToBooleanConverter" />
        <converters:StringToInt32Converter x:Key="StringToInt32Converter" />
        <converters:Int32ToStringConverter x:Key="Int32ToStringConverter" />
        <converters:TagToBooleanConverter x:Key="TagToBooleanConverter" />
        <converters:TipoCorConverter x:Key="TipoCorConverter" />
        <converters:ListaSelecaoTipoLancamentoConverter x:Key="ListaSelecaoTipoLancamentoConverter" />
        

        <!--Styles-->
        <Style TargetType="ListView" x:Key="VerticalListView">
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />

            <Setter Property="ScrollViewer.HorizontalScrollMode" Value="Enabled" />
            <Setter Property="ScrollViewer.VerticalScrollMode" Value="Disabled" />

            <Setter Property="ScrollViewer.ZoomMode" Value="Disabled" />
            <Setter Property="SelectionMode" Value="None" />

            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <StackPanel VerticalAlignment="Top" Orientation="Horizontal" Height="70" />
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="ListViewItem">
                        <Setter Property="Height" Value="100" />
                        <!--<Setter Property="DataContext" Value="{Binding Source={RelativeSource Mode=TemplatedParent}, Path=DataContext}" />-->
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>


        <DataTemplate x:Key="SelecaoSelector">
            <TextBlock Text="{Binding Descricao}" />
        </DataTemplate>
        <DataTemplate x:Key="SelecaoSelectorConta">
            <TextBlock Text="{Binding Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageContaSelecionada'}" />
        </DataTemplate>
        <DataTemplate x:Key="SelecaoSelectorTipo">
            <TextBlock Text="{Binding Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageTipoLancamento'}" />
        </DataTemplate>
        <DataTemplate x:Key="SelecaoSelectorForma">
            <TextBlock Text="{Binding Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageFormaPagamentoSelecao'}" />
        </DataTemplate>

        <DataTemplate x:Key="SelecaoSelectorRepeticao">
            <TextBlock Text="{Binding Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageRepeticaoHeader'}" />
        </DataTemplate>
        <DataTemplate x:Key="SelecaoSelectorFimRepeticao">
            <TextBlock Text="{Binding Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageFimRepeticao'}" />
        </DataTemplate>
        

        <uc:SelecaoDataTemplateSelector MyTemplate="{StaticResource SelecaoSelector}" 
                                        MyTemplate2="{StaticResource SelecaoSelectorTipo}" 
                                        x:Key="SelecaoTipoDataTemplateSelector"  />
        
        <uc:SelecaoDataTemplateSelector MyTemplate="{StaticResource SelecaoSelector}" 
                                        MyTemplate2="{StaticResource SelecaoSelectorConta}" 
                                        x:Key="SelecaoContaDataTemplateSelector"  />

        <uc:SelecaoDataTemplateSelector MyTemplate="{StaticResource SelecaoSelector}" 
                                        MyTemplate2="{StaticResource SelecaoSelectorForma}" 
                                        x:Key="SelecaoFormaDataTemplateSelector"  />
        <uc:SelecaoDataTemplateSelector MyTemplate="{StaticResource SelecaoSelector}" 
                                        MyTemplate2="{StaticResource SelecaoSelectorRepeticao}" 
                                        x:Key="SelecaoRepeticaoDataTemplateSelector"  />
        <uc:SelecaoDataTemplateSelector MyTemplate="{StaticResource SelecaoSelector}" 
                                        MyTemplate2="{StaticResource SelecaoSelectorFimRepeticao}" 
                                        x:Key="SelecaoFinalRepeticaoDataTemplateSelector"  />



        <DataTemplate x:Key="PivotHeaderTemplate">
            <Grid>
                <!--<Border BorderBrush="{StaticResource FundoStyle2}" BorderThickness="0,0,0,1" />-->
                <TextBlock Text="{Binding}" FontSize="28" Foreground="{StaticResource TextCorStyle}" />
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <interactivity:Interaction.Behaviors>
        <i:EventTriggerBehavior EventName="Loaded">
            <i:InvokeCommandAction Command="{Binding PageLoadCommand}"/>
        </i:EventTriggerBehavior>
    </interactivity:Interaction.Behaviors>
    <Page.BottomAppBar>
        <CommandBar>
            <AppBarButton Icon="Save" Label="save" x:Uid="CriarLancamentoPageMenuSave" Command="{Binding SalvarLancamento}"/>
            <AppBarButton Icon="Pin" Label="fixar" x:Uid="CriarLancamentoPageMenuPin" Command="{Binding FixarLancamento}"/>
        </CommandBar>
    </Page.BottomAppBar>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="0,0,5,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <!--<header:PageHeader Grid.Row="0" />-->

        <ScrollViewer Grid.Row="1" ZoomMode="Enabled" Margin="0">
            <StackPanel Margin="15,15,15,75">
                <!--Tipo de lançamento-->
                <ComboBox HorizontalAlignment="Stretch" PlaceholderText="{Binding Tipo.Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageTipoLancamento'}" x:Name="TipoFlyout2" ItemsSource="{Binding Tipos}" 
                          SelectedValue="{Binding Tipo, Mode=TwoWay}" BorderThickness="0" Margin="0,0,0,5" Padding="0,5,0,7"
                          ItemTemplateSelector="{StaticResource SelecaoTipoDataTemplateSelector}">
                </ComboBox>

                <!--Conta de destino-->
                <ComboBox x:Name="ContaComboBox" HorizontalAlignment="Stretch" PlaceholderText="{Binding ContaSelecionada.Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageContaSelecionada'}" 
                           ItemsSource="{Binding Contas}"  SelectedValue="{Binding ContaSelecionada,Mode=TwoWay}" BorderThickness="0" Margin="0,0,0,5" Padding="0,5,0,7" ItemTemplateSelector="{StaticResource SelecaoContaDataTemplateSelector}" />

                <!--Valor previsto-->
                <Button BorderThickness="0,0,0,0.5" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch" Command="{Binding AlterarValor}" VerticalContentAlignment="Stretch" Padding="0" 
                                Margin="0,0,-0.333,0" Template="{StaticResource ButtonFake}"  Style="{StaticResource ButtonFakeStyle}" Visibility="Visible" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}">
                    <Button.Flyout>
                        <Flyout Placement="Full">
                            <uc:DecimalInputUserControl DataContext="{Binding DecimalInputViewModel}"   />
                        </Flyout>
                    </Button.Flyout>
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" x:Uid="CriarLancamentoPageValorPrevisto"  Text="Valor previsto" Margin="0" VerticalAlignment="Top" Style="{StaticResource SubtitleTextBlockStyle}"  />
                            <TextBlock Grid.Column="1" x:Name="txtLancamentoValor" Text="{Binding Detalhes.ValorLancamento, ConverterParameter=\{0:n2\}, Converter={StaticResource StringFormatConverter}, Mode=OneWay}"  
                                       Padding="0" VerticalAlignment="Center" Style="{StaticResource SubheaderTextBlockStyle}"  />
                        </Grid>
                    </Button.Content>
                </Button>

                <!-- Valor realizado -->
                <Button BorderThickness="0,0,0,0.5" HorizontalAlignment="Stretch" 
                                VerticalAlignment="Stretch" HorizontalContentAlignment="Stretch"
                                Command="{Binding AlterarValorRealizado}"
                                Visibility="{Binding Detalhes.Fechado, 
                                Converter={StaticResource BooleanToVisibilityConverter}}"

                                VerticalContentAlignment="Stretch" Padding="-2,0,0,0" BorderBrush="{ThemeResource SystemControlBackgroundAccentBrush}" Style="{StaticResource ButtonFakeStyle}" >
                    <Button.Flyout>
                        <Flyout Placement="Full">
                            <uc:DecimalInputUserControl DataContext="{Binding DecimalInputViewModel}"  />
                        </Flyout>

                    </Button.Flyout>
                    <Button.Content>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" x:Uid="CriarLancamentoPageValorRealizado" Text="Valor realizado" Margin="0" VerticalAlignment="Top" Style="{StaticResource SubtitleTextBlockStyle}"  />
                            <TextBlock Grid.Column="1" x:Name="txtLancamentoValorRealizado" Text="{Binding Detalhes.ValorLancamentoRealizado, ConverterParameter=\{0:n2\}, Converter={StaticResource StringFormatConverter}, Mode=OneWay}"  Padding="0" VerticalAlignment="Center" Style="{StaticResource SubheaderTextBlockStyle}"  />
                        </Grid>
                    </Button.Content>
                </Button>


                <!--Realizado (Fechado)-->
                <ToggleSwitch x:Name="FechadoToggle" x:Uid="FechadoToggle" Margin="0,10,10,5" 
                          IsOn="{Binding Detalhes.Fechado, Mode=TwoWay}" 
                               HorizontalAlignment="Stretch"   />

                <TextBox  x:Name="TxtLancamentoNumeroDocumento" x:Uid="TxtLancamentoNumeroDocumento" 
                          Text="{Binding Detalhes.NumeroDocumento, Mode=TwoWay}"  InputScope="Number" Margin="0,0,0,5"  BorderThickness="0,0,0,0.5" PlaceholderText="Numero do documento"
                          Visibility="{Binding Fechado, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <!--Data de lançamento -->
                <DatePicker Date="{Binding Detalhes.DataLancamento, Mode=TwoWay, Converter={StaticResource DateTimeParaDateTimeOffsetConverter}}" 
                            x:Name="DataLancamentoFlyout" Visibility="{Binding PeriodoSelecionado, Converter={StaticResource PeriodoToVisibilityConverter}}" Margin="0,10" />

                <StackPanel Orientation="Horizontal" Margin="0,5">
                    <ToggleButton Background="{Binding Tipo.Tag, Converter={StaticResource TipoCorConverter}}" x:Uid="CriarLancamentoPageButtonOntem" IsChecked="{Binding PeriodoSelecionado, ConverterParameter=O, Converter={StaticResource PeriodoToBooleanConverter}, Mode=TwoWay}"  Foreground="{StaticResource TextCorStyle}" Margin="0" BorderBrush="{StaticResource TextCorStyle}"  BorderThickness="0,0,0,0.5" HorizontalAlignment="Center" Content="Ontem"   />
                    <ToggleButton Background="{Binding Tipo.Tag, Converter={StaticResource TipoCorConverter}}" x:Uid="CriarLancamentoPageButtonHoje"  IsChecked="{Binding PeriodoSelecionado, ConverterParameter=H, Converter={StaticResource PeriodoToBooleanConverter}, Mode=TwoWay}"  Foreground="{StaticResource TextCorStyle}" Margin="10,0,0,0" BorderBrush="{StaticResource TextCorStyle}"  BorderThickness="0,0,0,0.5" HorizontalAlignment="Center" Content="Hoje" />
                    <ToggleButton Background="{Binding Tipo.Tag, Converter={StaticResource TipoCorConverter}}" x:Uid="CriarLancamentoPageButtonInformar" IsChecked="{Binding PeriodoSelecionado, ConverterParameter=D, Converter={StaticResource PeriodoToBooleanConverter}, Mode=TwoWay}"  MaxWidth="170"  BorderBrush="{StaticResource TextCorStyle}"  BorderThickness="0,0,0,0.5" Margin="10,0,0,0" HorizontalAlignment="Center" Content="Definir data" />
                </StackPanel>

                
                <TextBox x:Name="TagsTextBox" x:Uid="TxtTagsSelecionadas" TextWrapping="Wrap" Text="{Binding Detalhes.Tags, Mode=TwoWay}" Height="80" InputScope="Default" AcceptsReturn="True" Margin="0,5,0,0" Background="#BFFFFFFF" BorderThickness="0,0,0,0.5" />

                <GridView ItemsSource="{Binding Tags}" Margin="0,5,0,0"                                  
                                  x:Name="TagsListView"                                  
                                  VerticalContentAlignment="Stretch" SelectionMode="None">
                    <GridView.Resources>
                        <ItemsPanelTemplate x:Key="ItemsPanelTemplate1">
                            <ItemsWrapGrid Orientation="Horizontal">
                                <ItemsWrapGrid.ChildrenTransitions>
                                    <TransitionCollection>
                                        <ContentThemeTransition VerticalOffset="128"/>
                                    </TransitionCollection>
                                </ItemsWrapGrid.ChildrenTransitions>
                            </ItemsWrapGrid>
                        </ItemsPanelTemplate>
                    </GridView.Resources>
                    <GridView.ItemsPanel>
                        <StaticResource ResourceKey="ItemsPanelTemplate1"/>
                    </GridView.ItemsPanel>
                    <GridView.ItemContainerTransitions>
                        <TransitionCollection>
                            <EntranceThemeTransition FromHorizontalOffset="90"/>
                        </TransitionCollection>
                    </GridView.ItemContainerTransitions>
                    <GridView.ItemTemplate>
                        <DataTemplate>
                            <ToggleButton Foreground="White" Padding="3"
                                                  Content="{Binding NomeTag}"
                                                  x:Name="MinhaTg"
                                                  BorderThickness="0,0,0,0.5" 
                                                  
                                                  IsChecked="{Binding Selecionado}"                                                  
                                                  BorderBrush="{StaticResource TextCorStyle}" 
                                                  Background="{Binding ElementName=This, Path=DataContext.Tipo.Tag, Converter={StaticResource TipoCorConverter}}"
                                                  FontSize="18" FontFamily="Segoe WP"
                                                  FontWeight="Normal" MinWidth="85" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

                                <interactivity:Interaction.Behaviors>
                                    <core:EventTriggerBehavior EventName="Tapped">
                                        <core:InvokeCommandAction Command="{Binding Path=DataContext.SelecionarTag, ElementName=TagsListView}" 
                                                                          CommandParameter="{Binding ElementName=MinhaTg}"/>
                                    </core:EventTriggerBehavior>
                                </interactivity:Interaction.Behaviors>
                            </ToggleButton>
                        </DataTemplate>
                    </GridView.ItemTemplate>
                </GridView>

                <!--Forma de pagamento-->
                <ComboBox  x:Name="FormaPagamentoFlyout" PlaceholderText="{Binding FormaDePagamento.Descricao, Converter={StaticResource SelecaoConverter}, ConverterParameter='CriarLancamentoPageFormaPagamentoSelecao'}"
                           ItemsSource="{Binding FormasDePagamento}" 
                           SelectedValue="{Binding FormaDePagamento, Mode=TwoWay}" BorderThickness="0"
                           HorizontalAlignment="Stretch" Margin="0,0,0,5" Padding="0,5,0,7" ItemTemplateSelector="{StaticResource SelecaoFormaDataTemplateSelector}" />

                <!--Repetição-->
                <ComboBox x:Name="RepeticaoButton" PlaceholderText="{Binding ElementName=RepeticaoFlyout, Path=SelectedValue.Descricao, Converter={StaticResource SelecaoConverter},ConverterParameter='CriarLancamentoPageRepeticaoHeader'}"
                          ItemsSource="{Binding ListaRepeticoes}" 
                          SelectedValue="{Binding Repeticao,Mode=TwoWay}" HorizontalAlignment="Stretch" 
                          BorderThickness="0" Margin="0,0,0,5" Padding="0,5,0,7" ItemTemplateSelector="{StaticResource SelecaoRepeticaoDataTemplateSelector}"/>


                <!--Final da retição-->
                <ComboBox x:Name="FinalRepeticaoButton" PlaceholderText="{Binding ElementName=RepeticaoFinalFlyout, Path=SelectedValue.Descricao, Converter={StaticResource SelecaoConverter},ConverterParameter='CriarLancamentoPageFimRepeticao'}"
                          ItemsSource="{Binding ListaRepeticoesFim}" SelectedValue="{Binding RepeticaoFim,Mode=TwoWay}" HorizontalAlignment="Stretch"
                          Visibility="{Binding Repeticao.Indice, Converter={StaticResource RepeticaoVisibilityConverter}}" 
                          BorderBrush="{StaticResource FundoStyle2}" BorderThickness="0" Margin="0,0,0,5" Padding="0,5,0,7"
                          ItemTemplateSelector="{StaticResource SelecaoFinalRepeticaoDataTemplateSelector}"/>

                <!--Data fim da repetição -->
                <DatePicker Date="{Binding Detalhes.FimRepeticaoData, Mode=TwoWay, Converter={StaticResource DateTimeParaDateTimeOffsetConverter}}" x:Name="DataFimRepeticaoFlyout" HorizontalAlignment="Left" Margin="0,0,0,5" Visibility="{Binding RepeticaoFim.Indice, ConverterParameter=1, Converter={StaticResource RepeticaoApuracaoVisibility}}" />
                
                <!--Repetir apuração Quantidade-->
                <TextBox x:Name="txtQuantidadeRepeticao" PlaceholderText="Quantidade de repetições" InputScope="NumericPin" x:Uid="CriaLancamentoPageQuantidadeRepeticaoTextBox"
                             Text="{Binding Detalhes.FimRepeticaoQuantidade, Mode=TwoWay,Converter={StaticResource Int32ToStringConverter}}"
                             Visibility="{Binding RepeticaoFim.Indice, Converter={StaticResource RepeticaoApuracaoVisibility}, ConverterParameter=2}" BorderThickness="0,0,0,0.5">
                </TextBox>



                <!--Descricao-->
                <TextBox x:Name="TxtLancamentoDescricao" x:Uid="TxtLancamentoDescricao" TextWrapping="Wrap" Text="{Binding Detalhes.Descricao, Mode=TwoWay}" Height="80" InputScope="Default" AcceptsReturn="True" Margin="0" BorderThickness="0,0,0,0.5" Padding="0,5,5,5"  />
            </StackPanel>
        </ScrollViewer>


        <!--<Pivot Grid.Row="1" HeaderTemplate="{StaticResource PivotHeaderTemplate}">

            <PivotItem Header="informações principais" x:Uid="CriarLancamentoPagePivotItem1">

                
            </PivotItem>
            <PivotItem Header="tags de identificação"  x:Uid="CriarLancamentoPagePivotItem2">
                <ScrollViewer>
                    <StackPanel>
                        
                    </StackPanel>
                </ScrollViewer>
            </PivotItem>
            <PivotItem Header="outras informações" x:Uid="CriarLancamentoPagePivotItem3">


                <StackPanel>

                </StackPanel>

            </PivotItem>
        </Pivot>-->
        <uc:BusyIndicatorControl Grid.Row="1" Grid.RowSpan="2" Visibility="{Binding IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}" d:IsHidden="True" />
    </Grid>
</Page>
